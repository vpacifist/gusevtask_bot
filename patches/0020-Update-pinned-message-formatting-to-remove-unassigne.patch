From 92ed966ee5b071aaeca94bac23e95db612ff8554 Mon Sep 17 00:00:00 2001
From: vovagusev <v@vovagusev.ru>
Date: Thu, 30 May 2024 23:52:41 +0400
Subject: [PATCH 20/28] Update pinned message formatting to remove unassigned
 label.

---
 mybot/bot.py | 215 +++++++++++++++++++++++++++++----------------------------
 1 file changed, 110 insertions(+), 105 deletions(-)

diff --git a/mybot/bot.py b/mybot/bot.py
index 5066e23..28de736 100644
--- a/mybot/bot.py
+++ b/mybot/bot.py
@@ -250,69 +250,6 @@ async def get_assignee_name_with_context(context, task):
     return await get_assignee_name(context.bot, context.effective_chat.id, assignee_data)
 
 
-# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list
-# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list
-async def list_tasks(update: Update, context: CallbackContext) -> None:
-    logging.info(f"Received /list command from {update.effective_user.username} in chat {update.effective_chat.id}")
-
-    chat_id = update.effective_chat.id
-    tasks = chat_tasks.get(chat_id, [])
-    if tasks:
-        message = "<b>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:</b>\n\n"
-
-        async def format_task_with_assignee(task, index):
-            assignee_name = "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"
-            if task.get('assignee'):
-                assignee_name = await get_assignee_name(context.bot, chat_id, task['assignee'].get('id'))
-            if task['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–∞':
-                return f"{index + 1}. <s>{task['task']} ({assignee_name})</s>"
-            else:
-                return f"{index + 1}. {task['task']} ({assignee_name})"
-
-        not_started_tasks = [
-            await format_task_with_assignee(task, i)
-            for i, task in enumerate(tasks)
-            if task['status'] == '–ù–µ –Ω–∞—á–∞—Ç–∞'
-        ]
-        in_progress_tasks = [
-            await format_task_with_assignee(task, i)
-            for i, task in enumerate(tasks)
-            if task['status'] == '–í –ø—Ä–æ—Ü–µ—Å—Å–µ'
-        ]
-        review_tasks = [
-            await format_task_with_assignee(task, i)
-            for i, task in enumerate(tasks)
-            if task['status'] == '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ'
-        ]
-        rework_tasks = [
-            await format_task_with_assignee(task, i)
-            for i, task in enumerate(tasks)
-            if task['status'] == '–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å'
-        ]
-        done_tasks = [
-            await format_task_with_assignee(task, i)
-            for i, task in enumerate(tasks)
-            if task['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'
-        ]
-
-        if not_started_tasks:
-            message += "<b>–ù–µ –Ω–∞—á–∞—Ç—ã:</b>\n" + "\n".join(not_started_tasks) + "\n\n"
-        if in_progress_tasks:
-            message += "<b>–í –ø—Ä–æ—Ü–µ—Å—Å–µ:</b>\n" + "\n".join(in_progress_tasks) + "\n\n"
-        if review_tasks:
-            message += "<b>–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ:</b>\n" + "\n".join(review_tasks) + "\n\n"
-        if rework_tasks:
-            message += "<b>–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å:</b>\n" + "\n".join(rework_tasks) + "\n\n"
-        if done_tasks:
-            message += "<b>–ó–∞–≤–µ—Ä—à–µ–Ω—ã:</b>\n" + "\n".join(done_tasks) + "\n\n"
-
-        await update.message.reply_text(message, parse_mode=ParseMode.HTML)
-        logging.info(f"Sent task list to chat {chat_id}")
-    else:
-        await update.message.reply_text("–ù–µ—Ç –∑–∞–¥–∞—á.", parse_mode=ParseMode.HTML)
-        logging.info(f"No tasks found for chat {chat_id}")
-
-
 # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete
 async def delete_task(update: Update, context: CallbackContext) -> None:
     chat_id = update.effective_chat.id
@@ -401,14 +338,34 @@ async def done_task(update: Update, context: CallbackContext) -> None:
         chat_tasks[chat_id][task_number]['status'] = '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'
         await update_pinned_message(chat_id, context.bot)
         save_state(chat_tasks, pinned_message_id)
-        assignee_data = chat_tasks[chat_id][task_number].get('assignee', {})
-        assignee_name = await get_assignee_name(context.bot, chat_id, assignee_data.get('id'))
-        await update.message.reply_text(f"–ó–∞–¥–∞—á–∞ {task_number + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ({assignee_name}).")
+        assignee = chat_tasks[chat_id][task_number].get('assignee', None)
+        assignee_name = ""
+        if assignee:
+            assignee_name = await get_assignee_name(context.bot, chat_id, assignee)
+        await update.message.reply_text(
+            f"–ó–∞–¥–∞—á–∞ {task_number + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞" + (f" ({assignee_name})" if assignee_name else "") + "."
+        )
     else:
         await update.message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏.")
 
 
 # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
+async def format_task_with_assignee(task_item, index, task_chat_id, task_bot):
+    assignee_name = None
+    if task_item.get('assignee'):
+        assignee_name = await get_assignee_name(task_bot, task_chat_id, task_item['assignee'].get('id'))
+    if task_item['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–∞':
+        if assignee_name:
+            return f"{index + 1}. <s>{task_item['task']} ({assignee_name})</s>"
+        else:
+            return f"{index + 1}. <s>{task_item['task']}</s>"
+    else:
+        if assignee_name:
+            return f"{index + 1}. {task_item['task']} ({assignee_name})"
+        else:
+            return f"{index + 1}. {task_item['task']}"
+
+
 async def update_pinned_message(chat_id: int, bot) -> None:
     logging.info(f"Updating pinned message for chat {chat_id}")
     tasks = chat_tasks.get(chat_id, [])
@@ -419,21 +376,18 @@ async def update_pinned_message(chat_id: int, bot) -> None:
         rework_tasks = []
         done_tasks = []
 
-        for i, task in enumerate(tasks):
-            assignee_name = "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"
-            if task.get('assignee') and task['assignee'].get('id'):
-                assignee_name = await get_assignee_name(bot, chat_id, task['assignee']['id'])
-
-            if task['status'] == '–ù–µ –Ω–∞—á–∞—Ç–∞':
-                not_started_tasks.append(f"{i + 1}. {task['task']} ({assignee_name})")
-            elif task['status'] == '–í –ø—Ä–æ—Ü–µ—Å—Å–µ':
-                in_progress_tasks.append(f"{i + 1}. {task['task']} ({assignee_name})")
-            elif task['status'] == '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ':
-                review_tasks.append(f"{i + 1}. {task['task']} ({assignee_name})")
-            elif task['status'] == '–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å':
-                rework_tasks.append(f"{i + 1}. {task['task']} ({assignee_name})")
-            elif task['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–∞':
-                done_tasks.append(f"{i + 1}. <s>{task['task']} ({assignee_name})</s>")
+        for i, task_item in enumerate(tasks):
+            formatted_task = await format_task_with_assignee(task_item, i, chat_id, bot)
+            if task_item['status'] == '–ù–µ –Ω–∞—á–∞—Ç–∞':
+                not_started_tasks.append(formatted_task)
+            elif task_item['status'] == '–í –ø—Ä–æ—Ü–µ—Å—Å–µ':
+                in_progress_tasks.append(formatted_task)
+            elif task_item['status'] == '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ':
+                review_tasks.append(formatted_task)
+            elif task_item['status'] == '–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å':
+                rework_tasks.append(formatted_task)
+            elif task_item['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–∞':
+                done_tasks.append(formatted_task)
 
         message = "<b>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:</b>\n\n"
 
@@ -460,10 +414,6 @@ async def update_pinned_message(chat_id: int, bot) -> None:
                     parse_mode=ParseMode.HTML
                 )
             else:
-                raise BadRequest("Pinned message not found")
-        except (TelegramError, BadRequest) as e:
-            logging.error(f"Error updating pinned message: {e}")
-            try:
                 logging.info("Sending new pinned message")
                 sent_message = await bot.send_message(
                     chat_id=chat_id,
@@ -475,20 +425,21 @@ async def update_pinned_message(chat_id: int, bot) -> None:
                     chat_id=chat_id,
                     message_id=sent_message.message_id
                 )
-            except TelegramError as e:
-                logging.error(f"Error sending new pinned message: {e}")
-                if isinstance(e, (BadRequest, Forbidden)):
-                    await bot.send_message(
-                        chat_id=chat_id,
-                        text="‚ö†Ô∏è –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π. "
-                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –º–µ–Ω—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –¥–∞–π—Ç–µ –ø—Ä–∞–≤–æ –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. üôè"
-                    )
-                else:
-                    await bot.send_message(
-                        chat_id=chat_id,
-                        text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
-                    )
+        except TelegramError as e:
+            logging.error(f"Error updating pinned message: {e}")
+            if isinstance(e, (BadRequest, Forbidden)):
+                await bot.send_message(
+                    chat_id=chat_id,
+                    text="‚ö†Ô∏è –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π. "
+                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –º–µ–Ω—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –¥–∞–π—Ç–µ –ø—Ä–∞–≤–æ –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. üôè"
+                )
+            else:
+                await bot.send_message(
+                    chat_id=chat_id,
+                    text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
+                )
 
+        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –Ω–µ—Ç –∑–∞–¥–∞—á
         if not tasks and chat_id in pinned_message_id:
             try:
                 logging.info(f"Editing existing pinned message {pinned_message_id[chat_id]} (no tasks)")
@@ -501,6 +452,58 @@ async def update_pinned_message(chat_id: int, bot) -> None:
                 logging.error(f"Failed to edit pinned message: {e}")
 
 
+async def list_tasks(update: Update, context: CallbackContext) -> None:
+    logging.info(f"Received /list command from {update.effective_user.username} in chat {update.effective_chat.id}")
+
+    chat_id = update.effective_chat.id
+    tasks = chat_tasks.get(chat_id, [])
+    if tasks:
+        message = "<b>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:</b>\n\n"
+
+        not_started_tasks = [
+            await format_task_with_assignee(task, i, chat_id, context.bot)
+            for i, task in enumerate(tasks)
+            if task['status'] == '–ù–µ –Ω–∞—á–∞—Ç–∞'
+        ]
+        in_progress_tasks = [
+            await format_task_with_assignee(task, i, chat_id, context.bot)
+            for i, task in enumerate(tasks)
+            if task['status'] == '–í –ø—Ä–æ—Ü–µ—Å—Å–µ'
+        ]
+        review_tasks = [
+            await format_task_with_assignee(task, i, chat_id, context.bot)
+            for i, task in enumerate(tasks)
+            if task['status'] == '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ'
+        ]
+        rework_tasks = [
+            await format_task_with_assignee(task, i, chat_id, context.bot)
+            for i, task in enumerate(tasks)
+            if task['status'] == '–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å'
+        ]
+        done_tasks = [
+            await format_task_with_assignee(task, i, chat_id, context.bot)
+            for i, task in enumerate(tasks)
+            if task['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'
+        ]
+
+        if not_started_tasks:
+            message += "<b>–ù–µ –Ω–∞—á–∞—Ç—ã:</b>\n" + "\n".join(not_started_tasks) + "\n\n"
+        if in_progress_tasks:
+            message += "<b>–í –ø—Ä–æ—Ü–µ—Å—Å–µ:</b>\n" + "\n".join(in_progress_tasks) + "\n\n"
+        if review_tasks:
+            message += "<b>–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ:</b>\n" + "\n".join(review_tasks) + "\n\n"
+        if rework_tasks:
+            message += "<b>–ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å:</b>\n" + "\n".join(rework_tasks) + "\n\n"
+        if done_tasks:
+            message += "<b>–ó–∞–≤–µ—Ä—à–µ–Ω—ã:</b>\n" + "\n".join(done_tasks) + "\n\n"
+
+        await update.message.reply_text(message, parse_mode=ParseMode.HTML)
+        logging.info(f"Sent task list to chat {chat_id}")
+    else:
+        await update.message.reply_text("–ù–µ—Ç –∑–∞–¥–∞—á.", parse_mode=ParseMode.HTML)
+        logging.info(f"No tasks found for chat {chat_id}")
+
+
 async def help_command(update: Update, _context: CallbackContext) -> None:
     """Send a message when the command /help is issued."""
     help_text = """
@@ -562,21 +565,23 @@ async def assign_task(update: Update, context: CallbackContext) -> None:
         if not assignee_mention.startswith("@"):
             raise ValueError("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω —á–µ—Ä–µ–∑ @")
 
-        assignee_username = assignee_mention[1:]  # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª "@"
         try:
-            chat_member = await context.bot.get_chat_member(chat_id, update.effective_user.id)
-            assignee_id = chat_member.user.id
-            assignee_full_name = chat_member.user.full_name
-            logging.info(f"Assigning task {task_number + 1} to user {assignee_full_name} ({assignee_id})")
+            user_id = int(assignee_mention.split()[0][3:-1])
+            assignee_user = await context.bot.get_chat_member(chat_id, user_id)
+            assignee_id = assignee_user.user.id
+            assignee_name = assignee_user.user.full_name
+
+            logging.info(f"Assigning task {task_number + 1} to user {assignee_name} ({assignee_id})")
+
         except (BadRequest, ValueError):
             await update.message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
             return
 
         if chat_id in chat_tasks and 0 <= task_number < len(chat_tasks[chat_id]):
-            chat_tasks[chat_id][task_number]['assignee'] = {'id': assignee_id, 'name': assignee_full_name}
+            chat_tasks[chat_id][task_number]['assignee'] = {'id': assignee_id, 'name': assignee_name}
             await update_pinned_message(chat_id, context.bot)
             save_state(chat_tasks, pinned_message_id)
-            await update.message.reply_text(f"–ó–∞–¥–∞—á–∞ {task_number + 1} –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–∞ {assignee_full_name}.")
+            await update.message.reply_text(f"–ó–∞–¥–∞—á–∞ {task_number + 1} –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–∞ {assignee_name}.")
         else:
             await update.message.reply_text("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.")
     except (IndexError, ValueError) as e:
-- 
2.45.1.windows.1

